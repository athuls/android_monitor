module demo1;

import java.util.logging.Logger;
import java.util.logging.Level;
import java.lang.*;
import java.text.SimpleDateFormat;
import java.util.Date;

/*

   This behavior simply sends two print(...) messages to the

   standardOutput actor.

*/

behavior HelloWorld {
    void hello(){
        SimpleDateFormat sdf = new SimpleDateFormat("MMM dd,yyyy HH:mm");
		Date resultdate = new Date(System.currentTimeMillis());
		String time = sdf.format(resultdate);

        standardOutput <- print("[" + time + "] " + "Hello ");
    }

    void world(){
        standardOutput <- println("World1!");
    }

    void helloworld(){
        hello()@
        world()@
        currentContinuation;
    }
}
// behavior HelloWorld {
//
//    private static Logger logger = Logger.getLogger("ProgressLog");
//
//    /*
//
//       The act(...) message handler is invoked by stand-alone
//
//       theatres automatically and is used to bootstrap salsa
//
//       programs.
//
//    */
//
//    void act( String[] argv ) {
//       logger.log(Level.INFO,"Done Hello World Atul");
//       standardOutput<-print( "Hello 2" ) @
//
//       standardOutput<-print( "World!" ): delay (new Integer (1000));;
//
//    }
//
//    /*
//
//       Notice that the above code is different from
//
//          standardOutput<-print( "Hello 2" );
//
//          standardOutput<-print( "World!" );
//
//       the code above uses a continuation to insure that the
//
//       world message is sent after the hello message
//
//       completes processing.
//
//    */
//
// }
