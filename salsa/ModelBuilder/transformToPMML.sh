#!/bin/bash
# $1- model filename generated by model.py. Either a cPickle,
#      Pickle or Json (keras models) file 
# $2- number of features
# $3- whether the model file generated is a cPickle file
#     or not. Valid options are cPickle, Keras. Otherwise 
#     Pickle is assumed.
# this script is needed to transform the cPickle file generated
# by model.py to a python3 readable pickle file which is then
# converted to a .pmml file by nyoka.
# Or just change model.py to store pickle files instead of
# cPickle files. Then only the second block of python code
# is executed.

if [ $3 = 'cPickle' ]
then

python - <<EOPYTHON2
filename = """${1}"""
import cPickle as cpkl
import pickle as pkl

f = open(filename, 'rb')
m = cpkl.load(f)
f.close()
f = open(filename.split('.')[0]+'.pkl','wb')
pkl.dump(m,f,-1)
f.close()


EOPYTHON2

fi


if [ $3 = 'Keras' ]
then


python3.6 - << EOPYTHON3

from nyoka import KerasToPmml
from keras.models import model_from_json

filename = """${1}"""
num_features = """${2}"""

f = open(filename, 'r')
model = model_from_json(f.read())
f.close()
model.load_weights(filename.split('.')[0]+'.h5')
keras_pmml = KerasToPmml(model)
keras_pmml.export(open(filename.split('.')[0]+'.pmml', 'w'), 0)

EOPYTHON3
exit 0
fi



python3.6 - << EOPYTHON3
from nyoka import skl_to_pmml
from sklearn.pipeline import Pipeline
import pickle as pkl
filename = """${1}"""
num_features = """${2}"""
modelfile = filename.split('.')[0] + '.pkl'
f = open(modelfile, 'rb')
model = pkl.load(f, encoding = 'latin1')
f.close()
pipeline_obj = Pipeline([('model', model)])
feature_names = ['x'+str(i) for i in range(1, int(num_features)+1)]
skl_to_pmml(pipeline_obj, feature_names, 'BatteryDropTime',
				modelfile.split('.')[0]+'.pmml')


EOPYTHON3

#chmod 755 test.py
#./test.py Hello
